// <auto-generated />
using System;
using GymMoves_WebAPI.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymMoves_WebAPI.Migrations
{
    [DbContext(typeof(MainDatabaseContext))]
    [Migration("20200604141842_InitialGymDb")]
    partial class InitialGymDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.ClassEntity", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtGymFK")
                        .HasColumnType("int");

                    b.Property<int>("ClassTimeFK")
                        .HasColumnType("int");

                    b.Property<int>("ClassTypeFK")
                        .HasColumnType("int");

                    b.Property<string>("InstructorIDFK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEntityUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("maxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("registeredCount")
                        .HasColumnType("int");

                    b.HasKey("ClassID");

                    b.HasIndex("AtGymFK");

                    b.HasIndex("ClassTimeFK");

                    b.HasIndex("ClassTypeFK");

                    b.HasIndex("InstructorIDFK");

                    b.HasIndex("UserEntityUserID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.ClassTimesEntity", b =>
                {
                    b.Property<int>("ClassTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassTimeID");

                    b.ToTable("ClassTimes");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.ClassTypeEntity", b =>
                {
                    b.Property<int>("ClassTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassTypeID");

                    b.ToTable("ClassTypes");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.GymEntity", b =>
                {
                    b.Property<int>("GymID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GymName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GymID");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.InstructorEntity", b =>
                {
                    b.Property<string>("InstructorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisteredGymFK")
                        .HasColumnType("int");

                    b.HasKey("InstructorID");

                    b.HasIndex("RegisteredGymFK");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.UserEntity", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ClassEntityClassID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisteredGymFK")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("ClassEntityClassID");

                    b.HasIndex("RegisteredGymFK");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.ClassEntity", b =>
                {
                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.GymEntity", "AtGym")
                        .WithMany()
                        .HasForeignKey("AtGymFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.ClassTimesEntity", "ClassTime")
                        .WithMany()
                        .HasForeignKey("ClassTimeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.ClassTypeEntity", "ClassType")
                        .WithMany()
                        .HasForeignKey("ClassTypeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.InstructorEntity", "Instructor")
                        .WithMany("InstructedClasses")
                        .HasForeignKey("InstructorIDFK");

                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.UserEntity", null)
                        .WithMany("Classes")
                        .HasForeignKey("UserEntityUserID");
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.InstructorEntity", b =>
                {
                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.GymEntity", "RegisteredGym")
                        .WithMany()
                        .HasForeignKey("RegisteredGymFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymMoves_WebAPI.Data.EntityModels.UserEntity", b =>
                {
                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.ClassEntity", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassEntityClassID");

                    b.HasOne("GymMoves_WebAPI.Data.EntityModels.GymEntity", "RegisteredGym")
                        .WithMany("Users")
                        .HasForeignKey("RegisteredGymFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
